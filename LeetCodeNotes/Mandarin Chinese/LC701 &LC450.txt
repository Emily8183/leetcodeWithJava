701和450这两题，都是针对二叉搜索树进行操作。前者701是插入节点，450是删除节点。 

701这题的诀窍在于，任何数值都可以作为叶子节点插入，不需要改变原来的树结构。

而450删除节点就比较复杂，zui容易出错的是当需要删除的节点，既有左节点、又有右节点，这时候的处理就很微妙。。

⭐701  二叉搜索树中的插入操作

步骤：递归
1）参数值：root和val；返回值就是一棵新的树
2）终止条件：当root == null，遍历到叶子节点时，此时可以定义（return）新节点；
3）单层逻辑：新节点向上返回，向左遍历时，返回到当前层的左子树接住；当向右遍历时，返回到当前层的右子树接住；

Tips: 
1）任何一个数值都可以想办法作为叶子节点插入，这是zui简单的解题方案；
2）注意新插入节点和父节点的赋值关系；

⭐450  删除二叉搜索树中的节点

Tips: 删除节点的逻辑就是终止遍历的逻辑（找到就删除）

1）没有找到要删的节点，return null;
2)   找到要删的节点，分情况讨论：
2.1) 这个节点恰好是个叶子节点，左右都为空，直接删，不用改变树的结构，直接return null（null赋值给当前层）
2.2）左不为空，右为空：return root.left (把左节点赋值给父节点）；
2.3）左为空，右不为空：同上，父节点直接指向到右节点；
2.4）左右都不为空：把当前需要删的节点定义为cur，两个方向都可以，比如将cur向右方下移，将原本位置的左子树，嫁接到新的root的左侧，从而仍然保持是BST：cur.left = root.left；return root.right（这里删除节点后，剪掉的是左子树，剪右子树也是可以一样操作）