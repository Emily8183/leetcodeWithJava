LC104和LC111，求max/min深度
.
⭐先捋清三个概念：
深度：节点到根节点的距离（从1开始）；
高度：根节点到叶子节点距离；
什么是叶子节点？叶子节点指没有子节点的节点
.
【LC104 Maximum Depth of Binary Tree】
.
⭐步骤:
还是递归三部曲
.
1）返回值是int，参数是root(node)；
2）终止条件：node == null时，说明是空节点，高度为0，return 0;
3) 单层逻辑：左右子树比较，zui大值+1，得出目前节点为根节点的树的深度。
.
⭐Tips:
重中之重，首先要选对遍历方法。
.
这道题选择后序遍历，因为需要从子节点向上推到根节点，自下而上就用后序遍历。
.
【LC111 Minimum Depth of Binary Tree】
.
求zui近的叶子节点的高度，叶子节点指没有子节点的节点。
.
步骤与上题LC104相似。但是有一个关键点，需要避免当左子树或者右子树为空时，直接return高度为1，那是不对的。
.
⭐这道题仍然使用后序遍历，如何处理左右中需要具体分析：
1）当root.left == null, 右子树不为空，说明不是zui低点，zui小深度是 1 + 右子树的深度；
2）当root.right == null，左子树不为空，同样说明不是zui低点，zui小深度是 1 + 左子树的深度；
3）当左右都不为空，则比较左右两侧，取zui小值+1；
.